name: Documentation Build & Deploy

on:
  push:
    branches: [ main, master ]
    paths:
      - '**.md'
      - 'Training_Materials/**'
      - 'Support_Infrastructure/**'
      - 'Pricing_and_Licensing/**'
  workflow_dispatch:

jobs:
  # Validate Documentation
  validate-docs:
    name: Validate Documentation
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Check markdown links
      uses: gaurav-nelson/github-action-markdown-link-check@v1
      with:
        use-quiet-mode: 'yes'
        config-file: '.github/markdown-link-check-config.json'
      continue-on-error: true
    
    - name: Lint markdown files
      uses: avto-dev/markdown-lint@v1
      with:
        args: '**/*.md'
        config: '.github/markdown-lint-config.json'
      continue-on-error: true
    
    - name: Check documentation completeness
      run: |
        echo "📚 Documentation Completeness Check"
        echo "==================================="
        
        # Check for required documentation
        required_docs=(
          "README.md"
          "DEPLOYMENT_README.md"
          "API_Documentation.md"
          "Administrator_Guide.md"
          "User_Guide_Security_Professionals.md"
          "User_Guide_Compliance_Officers.md"
          "Troubleshooting_Guide.md"
        )
        
        missing_docs=()
        for doc in "${required_docs[@]}"; do
          if [ -f "$doc" ]; then
            echo "✅ $doc"
          else
            echo "❌ $doc - MISSING"
            missing_docs+=("$doc")
          fi
        done
        
        if [ ${#missing_docs[@]} -eq 0 ]; then
          echo ""
          echo "✅ All required documentation present"
        else
          echo ""
          echo "⚠️ Missing ${#missing_docs[@]} required document(s)"
        fi

  # Build Documentation Site
  build-docs-site:
    name: Build Documentation Website
    runs-on: ubuntu-latest
    needs: validate-docs
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install MkDocs
      run: |
        pip install mkdocs mkdocs-material mkdocs-mermaid2-plugin
    
    - name: Create MkDocs configuration
      run: |
        cat > mkdocs.yml << 'EOF'
        site_name: SecureAI DeepFake Detection Documentation
        site_description: Complete documentation for SecureAI DeepFake Detection System
        site_author: SecureAI Team
        
        theme:
          name: material
          palette:
            primary: indigo
            accent: purple
          features:
            - navigation.tabs
            - navigation.sections
            - navigation.expand
            - search.suggest
            - search.highlight
        
        nav:
          - Home: README.md
          - Getting Started:
            - Deployment: DEPLOYMENT_README.md
            - Complete Guide: COMPLETE_DEPLOYMENT_GUIDE.md
            - Quick Start: UAT_Quick_Start.md
          - User Guides:
            - Security Professionals: User_Guide_Security_Professionals.md
            - Compliance Officers: User_Guide_Compliance_Officers.md
            - Quick Reference: Training_Materials/Quick_Reference_Guide.md
          - API Documentation:
            - API Reference: API_Documentation.md
            - Integration Testing: Enterprise_Integration_Testing.md
          - Administration:
            - Administrator Guide: Administrator_Guide.md
            - Technical Documentation: Technical_Documentation.md
            - Troubleshooting: Troubleshooting_Guide.md
          - Testing:
            - UAT Framework: UAT_Framework.md
            - Performance Testing: Performance_Validation_Framework.md
            - Security Audit: Security_Audit_Framework.md
            - Blockchain Testing: Blockchain_Integration_Testing.md
          - Compliance:
            - Regulatory Framework: Regulatory_Compliance_Framework.md
            - Compliance Reports: Compliance_Reports.md
          - Training:
            - Customer Onboarding: Training_Materials/Customer_Onboarding_Guide.md
            - Support Training: Training_Materials/Support_Team_Training.md
            - Administrator Training: Training_Materials/Administrator_Training.md
            - Certification Program: Training_Materials/Certification_Program.md
          - Commercial:
            - Pricing Model: Pricing_and_Licensing/Pricing_Model.md
            - Sales Enablement: Pricing_and_Licensing/Sales_Enablement.md
          - Support:
            - Help Desk System: Support_Infrastructure/Help_Desk_System.md
            - Escalation Procedures: Support_Infrastructure/Escalation_Procedures.md
            - Knowledge Base: Support_Infrastructure/Knowledge_Base_Articles.md
        
        plugins:
          - search
          - mermaid2
        
        markdown_extensions:
          - admonition
          - codehilite
          - pymdownx.superfences
          - pymdownx.tabbed
          - pymdownx.details
          - toc:
              permalink: true
        EOF
    
    - name: Build documentation
      run: |
        mkdocs build --clean --strict || echo "Documentation built with warnings"
      continue-on-error: true
    
    - name: Upload documentation artifact
      uses: actions/upload-artifact@v3
      with:
        name: documentation-site
        path: site/
      if: always()

  # Deploy Documentation
  deploy-docs:
    name: Deploy Documentation to GitHub Pages
    runs-on: ubuntu-latest
    needs: build-docs-site
    if: github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main'
    
    permissions:
      contents: write
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
    
    - name: Install MkDocs
      run: |
        pip install mkdocs mkdocs-material mkdocs-mermaid2-plugin
    
    - name: Create MkDocs configuration
      run: |
        # Reuse the mkdocs.yml from build step
        cat > mkdocs.yml << 'EOF'
        site_name: SecureAI DeepFake Detection Documentation
        site_description: Complete documentation for SecureAI DeepFake Detection System
        site_author: SecureAI Team
        
        theme:
          name: material
          palette:
            primary: indigo
            accent: purple
        
        nav:
          - Home: README.md
          - Getting Started:
            - Deployment: DEPLOYMENT_README.md
            - Complete Guide: COMPLETE_DEPLOYMENT_GUIDE.md
          - User Guides:
            - Security Professionals: User_Guide_Security_Professionals.md
            - Compliance Officers: User_Guide_Compliance_Officers.md
          - API Documentation: API_Documentation.md
          - Administrator Guide: Administrator_Guide.md
          - Troubleshooting: Troubleshooting_Guide.md
        
        plugins:
          - search
        EOF
    
    - name: Deploy to GitHub Pages
      run: |
        mkdocs gh-deploy --force --clean --message "Deploy documentation for commit ${{ github.sha }}"
      continue-on-error: true
    
    - name: Documentation deployed
      run: |
        echo "📚 Documentation deployed to GitHub Pages"
        echo "URL: https://${{ github.repository_owner }}.github.io/secureai-deepfake-detection/"
